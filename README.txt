===========================================
 PROYECTO: Auditor√≠a SSH / Telnet con Shodan
===========================================

Autor: Juan Camilo Ospina
Curso: Seguridad Inform√°tica

-------------------------------------------
	   DESCRIPCI√ìN GENERAL
-------------------------------------------

Esta herramienta permite realizar una auditor√≠a automatizada de servicios SSH y Telnet expuestos en internet, espec√≠ficamente en los pa√≠ses de Colombia y Argentina. Utiliza la API de Shodan para identificar dispositivos con estos servicios activos, y luego intenta autenticarse mediante pruebas de credenciales comunes.

El objetivo es evidenciar posibles configuraciones inseguras en servicios de administraci√≥n remota (SSH/Telnet), con fines exclusivamente educativos y de pruebas √©ticas.

-------------------------------------------
	  FUNCIONALIDADES PRINCIPALES
-------------------------------------------

‚úî B√∫squeda de servicios SSH y Telnet en Shodan por pa√≠s.
‚úî Detecci√≥n de puertos abiertos (no solo los predeterminados).
‚úî Validaci√≥n masiva y automatizada de credenciales (SSH con paramiko, Telnet con pexpect).
‚úî Interfaz gr√°fica con tabla, paginaci√≥n y feedback en tiempo real.
‚úî Modo CLI alternativo sin GUI.
‚úî Registro de accesos exitosos (IPs, credenciales, pa√≠s).
‚úî Log de errores y eventos amigable (errores.log).

-------------------------------------------
 	   ESTRUCTURA DE ARCHIVOS
-------------------------------------------


- mainBasico.py         ‚Üí Versi√≥n b√°sica: b√∫squeda y validaci√≥n sin logs ni interfaz completa.
- main.py               ‚Üí Versi√≥n avanzada: incluye todas las funciones b√°sicas + validaci√≥n masiva, logs y GUI.

- gui.py               ‚Üí Interfaz gr√°fica Tkinter.
- config.py            ‚Üí Configuraci√≥n: API key, pa√≠ses, servicios, etc.
- credentials.txt      ‚Üí Lista de combinaciones usuario:contrase√±a.
- Acceso_exitoso.txt   ‚Üí Resultados con IPs y credenciales exitosas.
- errores.log          ‚Üí Log de errores y eventos importantes.
- requerimientosPrevios.txt ‚Üí Lista de dependencias.

-------------------------------------------
	    USO DE LA HERRAMIENTA
-------------------------------------------

‚ñ∂ GUI (recomendado):
$ python3 main.py

‚ñ∂ Modo CLI:
$ python3 main.py --cli

‚ñ∂ Crear entorno virtual:
$ python3 -m venv venv
$ source venv/bin/activate   # En Linux/macOS
$ .\venv\Scripts\activate    # En Windows (CMD)

-------------------------------------------
	 EJEMPLO DE credentials.txt
-------------------------------------------

admin:admin
root:toor
admin:123456
user:user
admin:password
...

Puedes personalizar este archivo para realizar pruebas sobre diferentes dispositivos.

-------------------------------------------
      ALCANCE Y LIMITACIONES T√âCNICAS
-------------------------------------------

Alcance:
- Herramienta educativa para an√°lisis de exposici√≥n de servicios.
- Compatible con Python 3.11+ y sistemas Linux.
- Uso de API Shodan con l√≠mite configurable.

Limitaciones:
- Requiere API key v√°lida de Shodan.
- No detecta dispositivos ocultos tras firewalls/NAT.
- Algunas conexiones Telnet pueden necesitar ajustes seg√∫n el banner.
- No implementa fuerza bruta, solo validaci√≥n con lista predefinida.

-------------------------------------------
	        USO √âTICO Y LEGAL
-------------------------------------------

Esta herramienta ha sido desarrollada √∫nicamente con fines educativos. El uso no autorizado o contra sistemas ajenos sin permiso expreso constituye una actividad ilegal y viola c√≥digos √©ticos de ciberseguridad.

El autor NO se hace responsable por un mal uso del programa.

-------------------------------------------
      INSTALACI√ìN Y USO DESDE CERO
-------------------------------------------

1Ô∏è‚É£ Clona el repositorio en tu m√°quina:

$ git clone https://github.com/tuusuario/tu-repo.git
$ cd tu-repo

2Ô∏è‚É£ Crea y activa un entorno virtual de Python:

$ python3 -m venv venv
$ source venv/bin/activate   # En Linux/macOS
$ .\venv\Scripts\activate    # En Windows (CMD)

3Ô∏è‚É£ Instala las dependencias del proyecto:

(venv) $ pip install -r requerimientosPrevios.txt

4Ô∏è‚É£ Configura tu archivo `config.py` con tu API Key de Shodan:

API_KEY = "TU_API_KEY_DE_SHODAN"
SERVICIOS = ["ssh", "telnet"]
LIMITE_BUSQUEDA = 100
PAISES = ["CO", "AR"]

5Ô∏è‚É£ Prepara tu archivo `credentials.txt` con las combinaciones usuario:contrase√±a que desees probar.

6Ô∏è‚É£ Ejecuta la herramienta:

üî∏ Modo Interfaz Gr√°fica (recomendado):
(venv) $ python3 main.py

üî∏ Modo l√≠nea de comandos:
(venv) $ python3 main.py --cli

7Ô∏è‚É£ Revisa los archivos generados:
- `Acceso_exitoso.txt` ‚Üí IPs con acceso exitoso y credenciales usadas.
- `errores.log` ‚Üí Registro detallado de errores y eventos durante la ejecuci√≥n.
- La interfaz tambi√©n mostrar√° las IPs encontradas en una tabla paginada.

‚úÖ ¬°Todo listo para comenzar tu auditor√≠a √©tica y educativa!
